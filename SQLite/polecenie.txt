1. Napisz metodÄ wczytujÄcÄ dane z pliku CSV do dowolnej struktury danych (na przykĹad na List<List<String>>). Metoda ma zwrĂłciÄ tÄ strukturÄ danych oraz informacjÄ o nazwach kolumn - nazwy kolumn proszÄ wczytaÄ z headera pliku. Metoda jako argument ma przyjmowaÄ nazwÄ pliku csv oraz separator dzielÄcy od siebie poszczegĂłlne wartoĹci w kolumnach. ZakĹadamy, Ĺźe ten separator nie wystÄpuje nigdzie jako wartoĹÄ kolumny, na przykĹad, jeĹli separatorem jest przecinek, to przecinek nie wystÄpuje w kolumnach z napisami.

2.  Napisz metodÄ, ktĂłra jako parametr pobiera dane zwrĂłcone przez metodÄ z punktu 1. Metoda na podstawie tych danych ma zwracaÄ typy danych dla poszczegĂłlnych kolumn oraz czy kolumna moĹźe przyjmowaÄ wartoĹci NULL czy teĹź nie. ZakĹadamy, Ĺźe jeĹli kolumna nigdy nie ma wartoĹci NULL, to nie moĹźe przyjmowaÄ wartoĹci NULL. JeĹźeli wszystkie pola tej kolumny moĹźna zrzutowaÄ na int, kolumna jest typu INTEGER, jeĹźeli kolumna nie jest typu INTEGER a wszystkie jej pola moĹźna zrzutowaÄ na double, to jest typu REAL. W pozostaĹym przypadku kolumna jest typu TEXT.

3.  Napisz metodÄ, ktĂłra jako parametry przyjmuje dane zwrĂłcone przez metodÄ z punktu 2, nazwÄ tabeli do utworzenia oraz obiekt klasy SqliteConnection. Metoda na podstawie danych ma utworzyÄ w bazie odpowiedniÄ tabelÄ (o zdanych nazwach kolumn i typach) i nazwie zgodnej z przekazanÄ. PoĹÄczenie z bazÄ przekazywane jest w obiekcie SqliteConnection.

4. Napisz metodÄ, ktĂłra jako parametry przyjmuje dane, ktĂłre majÄ znaleĹşÄ siÄ w tabeli (dane zostaĹy wczytane metodÄ z punktu 1), nazwÄ tabeli oraz obiekt klasy SqliteConnection. Metoda ma wypeĹniÄ tabelÄ utworzonÄ w punkcie 3 tymi danymi.

5.Napisz metodÄ, ktĂłra jako parametr przyjmuje nazwÄ tabeli oraz obiekt klasy SqliteConnection. Metoda przy pomocy kwerendy SELECT ma wypisaÄ do konsoli wszystkie dane, ktĂłre znajdujÄ siÄ w tej tabeli. ProszÄ wypisaÄ rĂłwnieĹź nazwy kolumn.