1. Program szyfrujÄcy przy pomocy kryptografii klucza asymetrycznego. Napisz program ktĂłry jako parametr przyjmuje typ polecenia. W zaleĹźnoĹci od wybranego typu polecenia:
    - JeĹźeli typ polecenia = 0 program ma wygenerowaÄ i zapisaÄ do dwĂłch plikĂłw (o dowolnych nazwach, moĹźna je wpisaÄ "na sztywno") klucz publiczny oraz klucz prywatny algorytmu RSA.
    - JeĹźeli typ polecenia = 1, program dodatkowo pobiera nazwÄ dwĂłch plikĂłw (a), (b). Podany plik (a) ma zostaÄ zaszyfrowany przy pomocy klucza publicznego odczytanego z pliku, ktĂłry zostaĹ stworzony przy pomocy tego programu kiedy typ polecenia = 0. Zaszyfrowane dane majÄ byÄ zapisane w pliku (b).
    - JeĹźeli typ polecenia = 2, program dodatkowo pobiera nazwÄ dwĂłch plikĂłw (a), (b). Podany plik (a) ma zostaÄ odszyfrowany przy pomocy klucza prywatnego odczytanego z pliku, ktĂłry zostaĹ stworzony przy pomocy tego programu kiedy typ polecenia = 0. Odszyfrowane dane majÄ byÄ zapisane w pliku (b).
2.  Program liczÄcy sumÄ kontrolnÄ. Napisz program ktĂłry jako parametry przyjmuje nazwÄ pliku (a), nazwÄ pliku zawierajÄcego hash (b) oraz algorytm hashowania (SHA256, SHA512 lub MD5) (c). JeĹźeli plik hash (b) nie istnieje, program ma policzyÄ hash z pliku (a) i zapisaÄ go pod nazwÄ (b). JeĹźeli plik (b) istnieje, program ma zweryfikowaÄ hash i wypisaÄ do konsoli, czy hash jest zgodny.
3.Podpisywanie danych z pliku. ZakĹadamy, Ĺźe mamy dwa pliki w ktĂłrych znajduje siÄ klucz prywatny i publiczny algorytmu RSA. Te pliki zostaĹy utworzone np. programem z punktu 1. Program pobiera nazwÄ dwĂłch plikĂłw (a) i (b). Program wczytuje plik (a). JeĹli plik (b) istnieje, program ma potraktowaÄ go jako podpis wygenerowany z pliku (a) przy pomocy klucza prywatnego. Program ma zweryfikowaÄ, czy podpis jest poprawny i wypisaÄ wynik weryfikacji na ekran. JeĹli plik (b) nie istnieje, program ma wygenerowaÄ podpis danych z pliku (a) uĹźywajÄc klucza prywatnego i zapisaÄ ten podpis do pliku (b).
4. Zaszyfrowanie pliku algorytmem klucza symetrycznego przy uĹźyciu hasĹa. Program ma przyjmowaÄ cztery parametry: pliki (a), (b), hasĹo, typ operacji. 
    - JeĹźeli typ operacji = 0 program ma zaszyfrowaÄ plik (a) algorytmem AES, ktĂłrego klucz ma zostaÄ wygenerowany przy pomocy podanego hasĹa. Zaszyfrowane dane majÄ byÄ zapisane do pliku (b).
    - JeĹźeli typ operacji = 1 program ma odszyfrowaÄ plik (a) algorytmem AES, ktĂłrego klucz ma zostaÄ wygenerowany przy pomocy podanego hasĹa. Odszyfrowane dane majÄ byÄ zapisane do pliku (b).
Wszystkie dane wymagane do utworzenia klucza algorytmu AES z wyjÄtkiem hasĹa mogÄ byc wpisane "na sztywno" do programu.
